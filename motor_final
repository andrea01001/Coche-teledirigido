#include <ESP32Servo.h>
#include <PS4Controller.h>

const int escPin = 18;  // Pin donde conectas la señal del ESC
Servo motorESC;

void setup() {
  Serial.begin(115200);
  PS4.begin(); // Reemplaza con la dirección MAC de tu control PS4
  Serial.println("Esperando conexión con el control PS4...");

  motorESC.attach(escPin); // Rango del ESC (1000-2000 µs)

  // Calibración del ESC:  Importante para que el motor se consigure
  motorESC.writeMicroseconds(2000); // Máxima señal (arranque seguro)
  delay(2000);
  motorESC.writeMicroseconds(1000); // Mínima señal
  delay(2000);
  motorESC.writeMicroseconds(1500); // Neutro
  delay(2000);

  Serial.println("ESC calibrado y listo.");
  delay(2000);

}

void loop() {
  if (PS4.isConnected()) {
    int escValue = 1500;  // Valor neutro por defecto

    if (PS4.L2()) {  // Si se presiona L2 (marcha atrás)
      escValue = map(PS4.L2Value(), 0, 255, 1500, 1000); // 1000 = reversa
      Serial.printf("Reversa: %d\n", escValue);
    } 
    else if (PS4.R2()) {  // Si se presiona R2 (marcha adelante)
      escValue = map(PS4.R2Value(), 0, 255, 1500, 2000); // 2000 = máxima velocidad
      Serial.printf("Adelante: %d\n", escValue);
    }

    // Asegúrate de que el valor esté dentro del rango permitido
    escValue = constrain(escValue, 1000, 2000);

    // Envía la señal PWM al ESC
    motorESC.writeMicroseconds(escValue);
  } else {
    Serial.println("Mando no conectado. Esperando conexión...");
    delay(1000);  // Espera 1 segundo antes de intentar reconectar
  }

  delay(20);  // Pequeña pausa para estabilidad
